## ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

variables:
  buildConfiguration: 'Release'

jobs:
- job: 'First app'

  steps:      
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      version: 2.x
      #performMultiLevelLookup: true
      includePreviewVersions: true # Required for preview versions  
      
  # do this before your build tasks
  - task: DotNetCoreCLI@2
    displayName: 'Restore depedence'
    inputs:
      command: restore
      projects: '**/*.csproj'
  #    feedsToUse: config
  #    nugetConfigPath: NuGet.config    # Relative to root of the repository
  #    externalFeedCredentials: <Name of the NuGet service connection>#
  # ...    
  
  - task: DotNetCoreCLI@2
    displayName: 'Build project'
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)' # Update this to match your need
           
  
  #steps:
  # ...
  # do this after other tasks such as building
  - task: DotNetCoreCLI@2
    displayName: Testing
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
    
  
  
  - task: DotNetCoreCLI@2
    inputs:
      displayName: 'Artifact configuration'
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: True
    
    # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
  - task: PublishBuildArtifacts@1
    displayName: 'publish Artifact'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'myWebsiteName'   
    
  
    
  - task: AzurePowerShell@4
    displayName: 'create resource group on Azure'
    inputs:
      scriptType: InlineScript
      azureSubscription: Azure
      azurePowerShellVersion: LatestVersion
      inline: |
        New-AzResourceGroup -Name 'Marian' -Location 'northeurope'
  
